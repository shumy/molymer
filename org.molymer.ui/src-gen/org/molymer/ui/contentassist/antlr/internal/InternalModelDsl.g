/*
 * generated by Xtext
 */
grammar InternalModelDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.molymer.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.molymer.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.molymer.services.ModelDslGrammarAccess;

}

@parser::members {
 
 	private ModelDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ModelDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement
entryRuleElement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getAlternatives()); }
(rule__Element__Alternatives)
{ after(grammarAccess.getElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage
entryRulePackage 
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageAccess().getGroup()); }
(rule__Package__Group__0)
{ after(grammarAccess.getPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataType
entryRuleDataType 
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeAccess().getGroup()); }
(rule__DataType__Group__0)
{ after(grammarAccess.getDataTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeField
entryRuleDataTypeField 
:
{ before(grammarAccess.getDataTypeFieldRule()); }
	 ruleDataTypeField
{ after(grammarAccess.getDataTypeFieldRule()); } 
	 EOF 
;

// Rule DataTypeField
ruleDataTypeField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeFieldAccess().getAlternatives()); }
(rule__DataTypeField__Alternatives)
{ after(grammarAccess.getDataTypeFieldAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePatternType
entryRulePatternType 
:
{ before(grammarAccess.getPatternTypeRule()); }
	 rulePatternType
{ after(grammarAccess.getPatternTypeRule()); } 
	 EOF 
;

// Rule PatternType
rulePatternType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatternTypeAccess().getAlternatives()); }
(rule__PatternType__Alternatives)
{ after(grammarAccess.getPatternTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityGroup
entryRuleEntityGroup 
:
{ before(grammarAccess.getEntityGroupRule()); }
	 ruleEntityGroup
{ after(grammarAccess.getEntityGroupRule()); } 
	 EOF 
;

// Rule EntityGroup
ruleEntityGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityGroupAccess().getGroup()); }
(rule__EntityGroup__Group__0)
{ after(grammarAccess.getEntityGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityElements
entryRuleEntityElements 
:
{ before(grammarAccess.getEntityElementsRule()); }
	 ruleEntityElements
{ after(grammarAccess.getEntityElementsRule()); } 
	 EOF 
;

// Rule EntityElements
ruleEntityElements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityElementsAccess().getGroup()); }
(rule__EntityElements__Group__0)
{ after(grammarAccess.getEntityElementsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainer
entryRuleContainer 
:
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContainerAccess().getAlternatives()); }
(rule__Container__Alternatives)
{ after(grammarAccess.getContainerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getAlternatives()); }
(rule__Field__Alternatives)
{ after(grammarAccess.getFieldAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParent
entryRuleParent 
:
{ before(grammarAccess.getParentRule()); }
	 ruleParent
{ after(grammarAccess.getParentRule()); } 
	 EOF 
;

// Rule Parent
ruleParent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParentAccess().getGroup()); }
(rule__Parent__Group__0)
{ after(grammarAccess.getParentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChild
entryRuleChild 
:
{ before(grammarAccess.getChildRule()); }
	 ruleChild
{ after(grammarAccess.getChildRule()); } 
	 EOF 
;

// Rule Child
ruleChild
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChildAccess().getGroup()); }
(rule__Child__Group__0)
{ after(grammarAccess.getChildAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceAccess().getGroup()); }
(rule__Reference__Group__0)
{ after(grammarAccess.getReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceList
entryRuleReferenceList 
:
{ before(grammarAccess.getReferenceListRule()); }
	 ruleReferenceList
{ after(grammarAccess.getReferenceListRule()); } 
	 EOF 
;

// Rule ReferenceList
ruleReferenceList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceListAccess().getGroup()); }
(rule__ReferenceList__Group__0)
{ after(grammarAccess.getReferenceListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationMandatoryProperty
entryRuleAnnotationMandatoryProperty 
:
{ before(grammarAccess.getAnnotationMandatoryPropertyRule()); }
	 ruleAnnotationMandatoryProperty
{ after(grammarAccess.getAnnotationMandatoryPropertyRule()); } 
	 EOF 
;

// Rule AnnotationMandatoryProperty
ruleAnnotationMandatoryProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getGroup()); }
(rule__AnnotationMandatoryProperty__Group__0)
{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationOptionalProperty
entryRuleAnnotationOptionalProperty 
:
{ before(grammarAccess.getAnnotationOptionalPropertyRule()); }
	 ruleAnnotationOptionalProperty
{ after(grammarAccess.getAnnotationOptionalPropertyRule()); } 
	 EOF 
;

// Rule AnnotationOptionalProperty
ruleAnnotationOptionalProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getGroup()); }
(rule__AnnotationOptionalProperty__Group__0)
{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationGroup
entryRuleAnnotationGroup 
:
{ before(grammarAccess.getAnnotationGroupRule()); }
	 ruleAnnotationGroup
{ after(grammarAccess.getAnnotationGroupRule()); } 
	 EOF 
;

// Rule AnnotationGroup
ruleAnnotationGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationGroupAccess().getGroup()); }
(rule__AnnotationGroup__Group__0)
{ after(grammarAccess.getAnnotationGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationInstance
entryRuleAnnotationInstance 
:
{ before(grammarAccess.getAnnotationInstanceRule()); }
	 ruleAnnotationInstance
{ after(grammarAccess.getAnnotationInstanceRule()); } 
	 EOF 
;

// Rule AnnotationInstance
ruleAnnotationInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationInstanceAccess().getGroup()); }
(rule__AnnotationInstance__Group__0)
{ after(grammarAccess.getAnnotationInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationHiddenProperty
entryRuleAnnotationHiddenProperty 
:
{ before(grammarAccess.getAnnotationHiddenPropertyRule()); }
	 ruleAnnotationHiddenProperty
{ after(grammarAccess.getAnnotationHiddenPropertyRule()); } 
	 EOF 
;

// Rule AnnotationHiddenProperty
ruleAnnotationHiddenProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationHiddenPropertyAccess().getGroup()); }
(rule__AnnotationHiddenProperty__Group__0)
{ after(grammarAccess.getAnnotationHiddenPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationValue
entryRuleAnnotationValue 
:
{ before(grammarAccess.getAnnotationValueRule()); }
	 ruleAnnotationValue
{ after(grammarAccess.getAnnotationValueRule()); } 
	 EOF 
;

// Rule AnnotationValue
ruleAnnotationValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationValueAccess().getAlternatives()); }
(rule__AnnotationValue__Alternatives)
{ after(grammarAccess.getAnnotationValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleGroupType
entryRuleGroupType 
:
{ before(grammarAccess.getGroupTypeRule()); }
	 ruleGroupType
{ after(grammarAccess.getGroupTypeRule()); } 
	 EOF 
;

// Rule GroupType
ruleGroupType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupTypeAccess().getGroup()); }
(rule__GroupType__Group__0)
{ after(grammarAccess.getGroupTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageType
entryRulePackageType 
:
{ before(grammarAccess.getPackageTypeRule()); }
	 rulePackageType
{ after(grammarAccess.getPackageTypeRule()); } 
	 EOF 
;

// Rule PackageType
rulePackageType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageTypeAccess().getTypeAssignment()); }
(rule__PackageType__TypeAssignment)
{ after(grammarAccess.getPackageTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeType
entryRuleDataTypeType 
:
{ before(grammarAccess.getDataTypeTypeRule()); }
	 ruleDataTypeType
{ after(grammarAccess.getDataTypeTypeRule()); } 
	 EOF 
;

// Rule DataTypeType
ruleDataTypeType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeTypeAccess().getTypeAssignment()); }
(rule__DataTypeType__TypeAssignment)
{ after(grammarAccess.getDataTypeTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationType
entryRuleAnnotationType 
:
{ before(grammarAccess.getAnnotationTypeRule()); }
	 ruleAnnotationType
{ after(grammarAccess.getAnnotationTypeRule()); } 
	 EOF 
;

// Rule AnnotationType
ruleAnnotationType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationTypeAccess().getTypeAssignment()); }
(rule__AnnotationType__TypeAssignment)
{ after(grammarAccess.getAnnotationTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntityType
entryRuleEntityType 
:
{ before(grammarAccess.getEntityTypeRule()); }
	 ruleEntityType
{ after(grammarAccess.getEntityTypeRule()); } 
	 EOF 
;

// Rule EntityType
ruleEntityType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityTypeAccess().getTypeAssignment()); }
(rule__EntityType__TypeAssignment)
{ after(grammarAccess.getEntityTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyType
entryRulePropertyType 
:
{ before(grammarAccess.getPropertyTypeRule()); }
	 rulePropertyType
{ after(grammarAccess.getPropertyTypeRule()); } 
	 EOF 
;

// Rule PropertyType
rulePropertyType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyTypeAccess().getTypeAssignment()); }
(rule__PropertyType__TypeAssignment)
{ after(grammarAccess.getPropertyTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceType
entryRuleReferenceType 
:
{ before(grammarAccess.getReferenceTypeRule()); }
	 ruleReferenceType
{ after(grammarAccess.getReferenceTypeRule()); } 
	 EOF 
;

// Rule ReferenceType
ruleReferenceType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceTypeAccess().getTypeAssignment()); }
(rule__ReferenceType__TypeAssignment)
{ after(grammarAccess.getReferenceTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceListType
entryRuleReferenceListType 
:
{ before(grammarAccess.getReferenceListTypeRule()); }
	 ruleReferenceListType
{ after(grammarAccess.getReferenceListTypeRule()); } 
	 EOF 
;

// Rule ReferenceListType
ruleReferenceListType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceListTypeAccess().getTypeAssignment()); }
(rule__ReferenceListType__TypeAssignment)
{ after(grammarAccess.getReferenceListTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParentType
entryRuleParentType 
:
{ before(grammarAccess.getParentTypeRule()); }
	 ruleParentType
{ after(grammarAccess.getParentTypeRule()); } 
	 EOF 
;

// Rule ParentType
ruleParentType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParentTypeAccess().getTypeAssignment()); }
(rule__ParentType__TypeAssignment)
{ after(grammarAccess.getParentTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChildType
entryRuleChildType 
:
{ before(grammarAccess.getChildTypeRule()); }
	 ruleChildType
{ after(grammarAccess.getChildTypeRule()); } 
	 EOF 
;

// Rule ChildType
ruleChildType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChildTypeAccess().getTypeAssignment()); }
(rule__ChildType__TypeAssignment)
{ after(grammarAccess.getChildTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnoTypes
entryRuleAnnoTypes 
:
{ before(grammarAccess.getAnnoTypesRule()); }
	 ruleAnnoTypes
{ after(grammarAccess.getAnnoTypesRule()); } 
	 EOF 
;

// Rule AnnoTypes
ruleAnnoTypes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnoTypesAccess().getAlternatives()); }
(rule__AnnoTypes__Alternatives)
{ after(grammarAccess.getAnnoTypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerValue
entryRuleIntegerValue 
:
{ before(grammarAccess.getIntegerValueRule()); }
	 ruleIntegerValue
{ after(grammarAccess.getIntegerValueRule()); } 
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerValueAccess().getValueAssignment()); }
(rule__IntegerValue__ValueAssignment)
{ after(grammarAccess.getIntegerValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleValue
entryRuleDoubleValue 
:
{ before(grammarAccess.getDoubleValueRule()); }
	 ruleDoubleValue
{ after(grammarAccess.getDoubleValueRule()); } 
	 EOF 
;

// Rule DoubleValue
ruleDoubleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleValueAccess().getValueAssignment()); }
(rule__DoubleValue__ValueAssignment)
{ after(grammarAccess.getDoubleValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeValue
entryRuleRangeValue 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getRangeValueRule()); }
	 ruleRangeValue
{ after(grammarAccess.getRangeValueRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RangeValue
ruleRangeValue
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeValueAccess().getGroup()); }
(rule__RangeValue__Group__0)
{ after(grammarAccess.getRangeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleFormatRangeValue
entryRuleFormatRangeValue 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getFormatRangeValueRule()); }
	 ruleFormatRangeValue
{ after(grammarAccess.getFormatRangeValueRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FormatRangeValue
ruleFormatRangeValue
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormatRangeValueAccess().getGroup()); }
(rule__FormatRangeValue__Group__0)
{ after(grammarAccess.getFormatRangeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteger
entryRuleInteger 
:
{ before(grammarAccess.getIntegerRule()); }
	 ruleInteger
{ after(grammarAccess.getIntegerRule()); } 
	 EOF 
;

// Rule Integer
ruleInteger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerAccess().getGroup()); }
(rule__Integer__Group__0)
{ after(grammarAccess.getIntegerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDouble
entryRuleDouble 
:
{ before(grammarAccess.getDoubleRule()); }
	 ruleDouble
{ after(grammarAccess.getDoubleRule()); } 
	 EOF 
;

// Rule Double
ruleDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleAccess().getGroup()); }
(rule__Double__Group__0)
{ after(grammarAccess.getDoubleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule ValueType
ruleValueType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
(rule__ValueType__Alternatives)
{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Element__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getElementAccess().getTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getAnnotationParserRuleCall_1()); }
	ruleAnnotation
{ after(grammarAccess.getElementAccess().getAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getElementAccess().getPackageParserRuleCall_2()); }
	rulePackage
{ after(grammarAccess.getElementAccess().getPackageParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getEntityParserRuleCall_0()); }
	ruleEntity
{ after(grammarAccess.getTypeAccess().getEntityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_1()); }
	ruleDataType
{ after(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeFieldAccess().getGroup_0()); }
(rule__DataTypeField__Group_0__0)
{ after(grammarAccess.getDataTypeFieldAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDataTypeFieldAccess().getTypeAssignment_1()); }
(rule__DataTypeField__TypeAssignment_1)
{ after(grammarAccess.getDataTypeFieldAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternTypeAccess().getREGEXAssignment_0()); }
(rule__PatternType__REGEXAssignment_0)
{ after(grammarAccess.getPatternTypeAccess().getREGEXAssignment_0()); }
)

    |(
{ before(grammarAccess.getPatternTypeAccess().getDATEAssignment_1()); }
(rule__PatternType__DATEAssignment_1)
{ after(grammarAccess.getPatternTypeAccess().getDATEAssignment_1()); }
)

    |(
{ before(grammarAccess.getPatternTypeAccess().getNUMBERAssignment_2()); }
(rule__PatternType__NUMBERAssignment_2)
{ after(grammarAccess.getPatternTypeAccess().getNUMBERAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerAccess().getParentParserRuleCall_0()); }
	ruleParent
{ after(grammarAccess.getContainerAccess().getParentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getContainerAccess().getChildParserRuleCall_1()); }
	ruleChild
{ after(grammarAccess.getContainerAccess().getChildParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getPropertyParserRuleCall_0()); }
	ruleProperty
{ after(grammarAccess.getFieldAccess().getPropertyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFieldAccess().getReferenceParserRuleCall_1()); }
	ruleReference
{ after(grammarAccess.getFieldAccess().getReferenceParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFieldAccess().getReferenceListParserRuleCall_2()); }
	ruleReferenceList
{ after(grammarAccess.getFieldAccess().getReferenceListParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getGroup_1_0()); }
(rule__ReferenceList__Group_1_0__0)
{ after(grammarAccess.getReferenceListAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getReferenceListAccess().getHyphenMinusHyphenMinusLessThanSignKeyword_1_1()); }

	'--<' 

{ after(grammarAccess.getReferenceListAccess().getHyphenMinusHyphenMinusLessThanSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMandatoryProperty__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getGroupAssignment_2_0()); }
(rule__AnnotationMandatoryProperty__GroupAssignment_2_0)
{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getGroupAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getGroup_2_1()); }
(rule__AnnotationMandatoryProperty__Group_2_1__0)
{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getGroupAssignment_3_0()); }
(rule__AnnotationOptionalProperty__GroupAssignment_3_0)
{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getGroupAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getGroup_3_1()); }
(rule__AnnotationOptionalProperty__Group_3_1__0)
{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationValueAccess().getValueParserRuleCall_0()); }
	ruleValue
{ after(grammarAccess.getAnnotationValueAccess().getValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnnotationValueAccess().getAnnotationGroupParserRuleCall_1()); }
	ruleAnnotationGroup
{ after(grammarAccess.getAnnotationValueAccess().getAnnotationGroupParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnoTypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnoTypesAccess().getGroupTypeParserRuleCall_0()); }
	ruleGroupType
{ after(grammarAccess.getAnnoTypesAccess().getGroupTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnnoTypesAccess().getPackageTypeParserRuleCall_1()); }
	rulePackageType
{ after(grammarAccess.getAnnoTypesAccess().getPackageTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnnoTypesAccess().getDataTypeTypeParserRuleCall_2()); }
	ruleDataTypeType
{ after(grammarAccess.getAnnoTypesAccess().getDataTypeTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAnnoTypesAccess().getAnnotationTypeParserRuleCall_3()); }
	ruleAnnotationType
{ after(grammarAccess.getAnnoTypesAccess().getAnnotationTypeParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAnnoTypesAccess().getEntityTypeParserRuleCall_4()); }
	ruleEntityType
{ after(grammarAccess.getAnnoTypesAccess().getEntityTypeParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAnnoTypesAccess().getPropertyTypeParserRuleCall_5()); }
	rulePropertyType
{ after(grammarAccess.getAnnoTypesAccess().getPropertyTypeParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAnnoTypesAccess().getReferenceTypeParserRuleCall_6()); }
	ruleReferenceType
{ after(grammarAccess.getAnnoTypesAccess().getReferenceTypeParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getAnnoTypesAccess().getReferenceListTypeParserRuleCall_7()); }
	ruleReferenceListType
{ after(grammarAccess.getAnnoTypesAccess().getReferenceListTypeParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getAnnoTypesAccess().getParentTypeParserRuleCall_8()); }
	ruleParentType
{ after(grammarAccess.getAnnoTypesAccess().getParentTypeParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getAnnoTypesAccess().getChildTypeParserRuleCall_9()); }
	ruleChildType
{ after(grammarAccess.getAnnoTypesAccess().getChildTypeParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeValue__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeValueAccess().getFromAssignment_0_0()); }
(rule__RangeValue__FromAssignment_0_0)
{ after(grammarAccess.getRangeValueAccess().getFromAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getRangeValueAccess().getFromInfAssignment_0_1()); }
(rule__RangeValue__FromInfAssignment_0_1)
{ after(grammarAccess.getRangeValueAccess().getFromInfAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeValue__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeValueAccess().getToAssignment_2_0()); }
(rule__RangeValue__ToAssignment_2_0)
{ after(grammarAccess.getRangeValueAccess().getToAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getRangeValueAccess().getToInfAssignment_2_1()); }
(rule__RangeValue__ToInfAssignment_2_1)
{ after(grammarAccess.getRangeValueAccess().getToInfAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); }
(	ruleStringValue)
{ after(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_1()); }
	ruleIntegerValue
{ after(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getDoubleValueParserRuleCall_2()); }
	ruleDoubleValue
{ after(grammarAccess.getValueAccess().getDoubleValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getRangeValueParserRuleCall_3()); }
	ruleRangeValue
{ after(grammarAccess.getValueAccess().getRangeValueParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getValueAccess().getFormatRangeValueParserRuleCall_4()); }
	ruleFormatRangeValue
{ after(grammarAccess.getValueAccess().getFormatRangeValueParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_0()); }
(	'#string' 
)
{ after(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getINTEGEREnumLiteralDeclaration_1()); }
(	'#integer' 
)
{ after(grammarAccess.getValueTypeAccess().getINTEGEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getDOUBLEEnumLiteralDeclaration_2()); }
(	'#double' 
)
{ after(grammarAccess.getValueTypeAccess().getDOUBLEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getINT_RANGEEnumLiteralDeclaration_3()); }
(	'#int-range' 
)
{ after(grammarAccess.getValueTypeAccess().getINT_RANGEEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getFORMAT_RANGEEnumLiteralDeclaration_4()); }
(	'#format-range' 
)
{ after(grammarAccess.getValueTypeAccess().getFORMAT_RANGEEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
(rule__Model__ImportsAssignment_0)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsAssignment_1()); }
(rule__Model__ElementsAssignment_1)*
{ after(grammarAccess.getModelAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getAnnotationsAssignment_0()); }
(rule__Package__AnnotationsAssignment_0)*
{ after(grammarAccess.getPackageAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageKeyword_1()); }

	'package' 

{ after(grammarAccess.getPackageAccess().getPackageKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameAssignment_2()); }
(rule__Package__NameAssignment_2)
{ after(grammarAccess.getPackageAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__4__Impl
	rule__Package__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getElementsAssignment_4()); }
(rule__Package__ElementsAssignment_4)*
{ after(grammarAccess.getPackageAccess().getElementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DataType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getAnnotationsAssignment_0()); }
(rule__DataType__AnnotationsAssignment_0)*
{ after(grammarAccess.getDataTypeAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__1__Impl
	rule__DataType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_1()); }

	'datatype' 

{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__2__Impl
	rule__DataType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNameAssignment_2()); }
(rule__DataType__NameAssignment_2)
{ after(grammarAccess.getDataTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__3__Impl
	rule__DataType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__4__Impl
	rule__DataType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getFormatedFieldsAssignment_4()); }
(rule__DataType__FormatedFieldsAssignment_4)*
{ after(grammarAccess.getDataTypeAccess().getFormatedFieldsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DataTypeField__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeField__Group_0__0__Impl
	rule__DataTypeField__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeFieldAccess().getPatternAssignment_0_0()); }
(rule__DataTypeField__PatternAssignment_0_0)
{ after(grammarAccess.getDataTypeFieldAccess().getPatternAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeField__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeField__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeFieldAccess().getFormatAssignment_0_1()); }
(rule__DataTypeField__FormatAssignment_0_1)
{ after(grammarAccess.getDataTypeFieldAccess().getFormatAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAnnotationsAssignment_0()); }
(rule__Entity__AnnotationsAssignment_0)*
{ after(grammarAccess.getEntityAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_1()); }

	'entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_2()); }
(rule__Entity__NameAssignment_2)
{ after(grammarAccess.getEntityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getParentAssignment_4()); }
(rule__Entity__ParentAssignment_4)?
{ after(grammarAccess.getEntityAccess().getParentAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getElementsAssignment_5()); }
(rule__Entity__ElementsAssignment_5)
{ after(grammarAccess.getEntityAccess().getElementsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__6__Impl
	rule__Entity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroupsAssignment_6()); }
(rule__Entity__GroupsAssignment_6)*
{ after(grammarAccess.getEntityAccess().getGroupsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__EntityGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityGroup__Group__0__Impl
	rule__EntityGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityGroup__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityGroupAccess().getGroupKeyword_0()); }

	'group' 

{ after(grammarAccess.getEntityGroupAccess().getGroupKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityGroup__Group__1__Impl
	rule__EntityGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityGroup__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityGroupAccess().getNameAssignment_1()); }
(rule__EntityGroup__NameAssignment_1)
{ after(grammarAccess.getEntityGroupAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityGroup__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityGroup__Group__2__Impl
	rule__EntityGroup__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityGroup__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityGroupAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEntityGroupAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityGroup__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityGroup__Group__3__Impl
	rule__EntityGroup__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityGroup__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityGroupAccess().getElementsAssignment_3()); }
(rule__EntityGroup__ElementsAssignment_3)
{ after(grammarAccess.getEntityGroupAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityGroup__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityGroup__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityGroup__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityGroupAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getEntityGroupAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EntityElements__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityElements__Group__0__Impl
	rule__EntityElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityElements__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityElementsAccess().getEntityElementsAction_0()); }
(

)
{ after(grammarAccess.getEntityElementsAccess().getEntityElementsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EntityElements__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityElements__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityElements__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1()); }
(rule__EntityElements__UnorderedGroup_1)
{ after(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parent__Group__0__Impl
	rule__Parent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentAccess().getParentKeyword_0()); }

	':parent->' 

{ after(grammarAccess.getParentAccess().getParentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parent__Group__1__Impl
	rule__Parent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentAccess().getTypeAssignment_1()); }
(rule__Parent__TypeAssignment_1)
{ after(grammarAccess.getParentAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentAccess().getAnnotationsAssignment_2()); }
(rule__Parent__AnnotationsAssignment_2)*
{ after(grammarAccess.getParentAccess().getAnnotationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Child__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Child__Group__0__Impl
	rule__Child__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildAccess().getChildsKeyword_0()); }

	':childs-<' 

{ after(grammarAccess.getChildAccess().getChildsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Child__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Child__Group__1__Impl
	rule__Child__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildAccess().getTypeAssignment_1()); }
(rule__Child__TypeAssignment_1)
{ after(grammarAccess.getChildAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Child__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Child__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Child__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildAccess().getAnnotationsAssignment_2()); }
(rule__Child__AnnotationsAssignment_2)*
{ after(grammarAccess.getChildAccess().getAnnotationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
(rule__Property__NameAssignment_0)
{ after(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getOptionalAssignment_1()); }
(rule__Property__OptionalAssignment_1)?
{ after(grammarAccess.getPropertyAccess().getOptionalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getPropertyAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__3__Impl
	rule__Property__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeAssignment_3()); }
(rule__Property__TypeAssignment_3)
{ after(grammarAccess.getPropertyAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAnnotationsAssignment_4()); }
(rule__Property__AnnotationsAssignment_4)*
{ after(grammarAccess.getPropertyAccess().getAnnotationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getNameAssignment_0()); }
(rule__Reference__NameAssignment_0)
{ after(grammarAccess.getReferenceAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__1__Impl
	rule__Reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getOptionalAssignment_1()); }
(rule__Reference__OptionalAssignment_1)?
{ after(grammarAccess.getReferenceAccess().getOptionalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__2__Impl
	rule__Reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_2()); }

	'-->' 

{ after(grammarAccess.getReferenceAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__3__Impl
	rule__Reference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getEntityAssignment_3()); }
(rule__Reference__EntityAssignment_3)
{ after(grammarAccess.getReferenceAccess().getEntityAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getAnnotationsAssignment_4()); }
(rule__Reference__AnnotationsAssignment_4)*
{ after(grammarAccess.getReferenceAccess().getAnnotationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ReferenceList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceList__Group__0__Impl
	rule__ReferenceList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getNameAssignment_0()); }
(rule__ReferenceList__NameAssignment_0)
{ after(grammarAccess.getReferenceListAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceList__Group__1__Impl
	rule__ReferenceList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getAlternatives_1()); }
(rule__ReferenceList__Alternatives_1)
{ after(grammarAccess.getReferenceListAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceList__Group__2__Impl
	rule__ReferenceList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getEntityAssignment_2()); }
(rule__ReferenceList__EntityAssignment_2)
{ after(grammarAccess.getReferenceListAccess().getEntityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getAnnotationsAssignment_3()); }
(rule__ReferenceList__AnnotationsAssignment_3)*
{ after(grammarAccess.getReferenceListAccess().getAnnotationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReferenceList__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceList__Group_1_0__0__Impl
	rule__ReferenceList__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getHyphenMinusKeyword_1_0_0()); }

	'-' 

{ after(grammarAccess.getReferenceListAccess().getHyphenMinusKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceList__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceList__Group_1_0__1__Impl
	rule__ReferenceList__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getReferenceAssignment_1_0_1()); }
(rule__ReferenceList__ReferenceAssignment_1_0_1)
{ after(grammarAccess.getReferenceListAccess().getReferenceAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceList__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceList__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getHyphenMinusLessThanSignKeyword_1_0_2()); }

	'-<' 

{ after(grammarAccess.getReferenceListAccess().getHyphenMinusLessThanSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getAnnotationAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAnnotationAccess().getTypesAssignment_1()); }
(rule__Annotation__TypesAssignment_1)
{ after(grammarAccess.getAnnotationAccess().getTypesAssignment_1()); }
)
(
{ before(grammarAccess.getAnnotationAccess().getTypesAssignment_1()); }
(rule__Annotation__TypesAssignment_1)*
{ after(grammarAccess.getAnnotationAccess().getTypesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__2__Impl
	rule__Annotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getInstancesAssignment_2()); }
(rule__Annotation__InstancesAssignment_2)*
{ after(grammarAccess.getAnnotationAccess().getInstancesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__3__Impl
	rule__Annotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getAnnotationAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__4__Impl
	rule__Annotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getAnnotationKeyword_4()); }

	'annotation' 

{ after(grammarAccess.getAnnotationAccess().getAnnotationKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__5__Impl
	rule__Annotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNameAssignment_5()); }
(rule__Annotation__NameAssignment_5)
{ after(grammarAccess.getAnnotationAccess().getNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__6__Impl
	rule__Annotation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getAnnotationAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__7__Impl
	rule__Annotation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getMandatoriesAssignment_7()); }
(rule__Annotation__MandatoriesAssignment_7)*
{ after(grammarAccess.getAnnotationAccess().getMandatoriesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__8__Impl
	rule__Annotation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getOptionalsAssignment_8()); }
(rule__Annotation__OptionalsAssignment_8)*
{ after(grammarAccess.getAnnotationAccess().getOptionalsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getAnnotationAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__AnnotationMandatoryProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMandatoryProperty__Group__0__Impl
	rule__AnnotationMandatoryProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMandatoryProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getNameAssignment_0()); }
(rule__AnnotationMandatoryProperty__NameAssignment_0)
{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationMandatoryProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMandatoryProperty__Group__1__Impl
	rule__AnnotationMandatoryProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMandatoryProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationMandatoryProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMandatoryProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMandatoryProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getAlternatives_2()); }
(rule__AnnotationMandatoryProperty__Alternatives_2)
{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnnotationMandatoryProperty__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMandatoryProperty__Group_2_1__0__Impl
	rule__AnnotationMandatoryProperty__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMandatoryProperty__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getTypeAssignment_2_1_0()); }
(rule__AnnotationMandatoryProperty__TypeAssignment_2_1_0)
{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getTypeAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationMandatoryProperty__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationMandatoryProperty__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMandatoryProperty__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getMultiAssignment_2_1_1()); }
(rule__AnnotationMandatoryProperty__MultiAssignment_2_1_1)?
{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getMultiAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationOptionalProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationOptionalProperty__Group__0__Impl
	rule__AnnotationOptionalProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getNameAssignment_0()); }
(rule__AnnotationOptionalProperty__NameAssignment_0)
{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationOptionalProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationOptionalProperty__Group__1__Impl
	rule__AnnotationOptionalProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getQuestionMarkKeyword_1()); }

	'?' 

{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationOptionalProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationOptionalProperty__Group__2__Impl
	rule__AnnotationOptionalProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationOptionalProperty__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationOptionalProperty__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getAlternatives_3()); }
(rule__AnnotationOptionalProperty__Alternatives_3)
{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AnnotationOptionalProperty__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationOptionalProperty__Group_3_1__0__Impl
	rule__AnnotationOptionalProperty__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getTypeAssignment_3_1_0()); }
(rule__AnnotationOptionalProperty__TypeAssignment_3_1_0)
{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getTypeAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationOptionalProperty__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationOptionalProperty__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getMultiAssignment_3_1_1()); }
(rule__AnnotationOptionalProperty__MultiAssignment_3_1_1)?
{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getMultiAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationGroup__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationGroup__Group__0__Impl
	rule__AnnotationGroup__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationGroup__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationGroupAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getAnnotationGroupAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationGroup__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationGroup__Group__1__Impl
	rule__AnnotationGroup__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationGroup__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAnnotationGroupAccess().getInstancesAssignment_1()); }
(rule__AnnotationGroup__InstancesAssignment_1)
{ after(grammarAccess.getAnnotationGroupAccess().getInstancesAssignment_1()); }
)
(
{ before(grammarAccess.getAnnotationGroupAccess().getInstancesAssignment_1()); }
(rule__AnnotationGroup__InstancesAssignment_1)*
{ after(grammarAccess.getAnnotationGroupAccess().getInstancesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationGroup__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationGroup__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationGroup__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationGroupAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getAnnotationGroupAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnnotationInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationInstance__Group__0__Impl
	rule__AnnotationInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationInstanceAccess().getAnnotationAssignment_0()); }
(rule__AnnotationInstance__AnnotationAssignment_0)
{ after(grammarAccess.getAnnotationInstanceAccess().getAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationInstance__Group__1__Impl
	rule__AnnotationInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationInstanceAccess().getValuesAssignment_1()); }
(rule__AnnotationInstance__ValuesAssignment_1)*
{ after(grammarAccess.getAnnotationInstanceAccess().getValuesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationInstance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationInstance__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInstance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationInstanceAccess().getGroup_2()); }
(rule__AnnotationInstance__Group_2__0)?
{ after(grammarAccess.getAnnotationInstanceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnnotationInstance__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationInstance__Group_2__0__Impl
	rule__AnnotationInstance__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInstance__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationInstanceAccess().getHIDDENKeyword_2_0()); }

	'-HIDDEN-' 

{ after(grammarAccess.getAnnotationInstanceAccess().getHIDDENKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationInstance__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationInstance__Group_2__1__Impl
	rule__AnnotationInstance__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInstance__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAnnotationInstanceAccess().getPropertiesAssignment_2_1()); }
(rule__AnnotationInstance__PropertiesAssignment_2_1)
{ after(grammarAccess.getAnnotationInstanceAccess().getPropertiesAssignment_2_1()); }
)
(
{ before(grammarAccess.getAnnotationInstanceAccess().getPropertiesAssignment_2_1()); }
(rule__AnnotationInstance__PropertiesAssignment_2_1)*
{ after(grammarAccess.getAnnotationInstanceAccess().getPropertiesAssignment_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationInstance__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationInstance__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInstance__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationInstanceAccess().getHIDDENKeyword_2_2()); }

	'-HIDDEN-' 

{ after(grammarAccess.getAnnotationInstanceAccess().getHIDDENKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnnotationHiddenProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationHiddenProperty__Group__0__Impl
	rule__AnnotationHiddenProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationHiddenProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationHiddenPropertyAccess().getPropertyAssignment_0()); }
(rule__AnnotationHiddenProperty__PropertyAssignment_0)
{ after(grammarAccess.getAnnotationHiddenPropertyAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationHiddenProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationHiddenProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationHiddenProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationHiddenPropertyAccess().getValuesAssignment_1()); }
(rule__AnnotationHiddenProperty__ValuesAssignment_1)*
{ after(grammarAccess.getAnnotationHiddenPropertyAccess().getValuesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GroupType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupType__Group__0__Impl
	rule__GroupType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupTypeAccess().getTypeAssignment_0()); }
(rule__GroupType__TypeAssignment_0)
{ after(grammarAccess.getGroupTypeAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GroupType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GroupType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GroupType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupTypeAccess().getNameAssignment_1()); }
(rule__GroupType__NameAssignment_1)
{ after(grammarAccess.getGroupTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RangeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeValue__Group__0__Impl
	rule__RangeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeValueAccess().getAlternatives_0()); }
(rule__RangeValue__Alternatives_0)
{ after(grammarAccess.getRangeValueAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeValue__Group__1__Impl
	rule__RangeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeValueAccess().getFullStopFullStopKeyword_1()); }

	'..' 

{ after(grammarAccess.getRangeValueAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeValueAccess().getAlternatives_2()); }
(rule__RangeValue__Alternatives_2)
{ after(grammarAccess.getRangeValueAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FormatRangeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormatRangeValue__Group__0__Impl
	rule__FormatRangeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormatRangeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormatRangeValueAccess().getFromAssignment_0()); }
(rule__FormatRangeValue__FromAssignment_0)
{ after(grammarAccess.getFormatRangeValueAccess().getFromAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormatRangeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormatRangeValue__Group__1__Impl
	rule__FormatRangeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormatRangeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormatRangeValueAccess().getFullStopFullStopKeyword_1()); }

	'..' 

{ after(grammarAccess.getFormatRangeValueAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormatRangeValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormatRangeValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormatRangeValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormatRangeValueAccess().getToAssignment_2()); }
(rule__FormatRangeValue__ToAssignment_2)
{ after(grammarAccess.getFormatRangeValueAccess().getToAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Integer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Integer__Group__0__Impl
	rule__Integer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Integer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Integer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Double__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group__0__Impl
	rule__Double__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getIntegerParserRuleCall_0()); }
	ruleInteger
{ after(grammarAccess.getDoubleAccess().getIntegerParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group__1__Impl
	rule__Double__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getDoubleAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Double__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Double__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Double__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__EntityElements__UnorderedGroup_1
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1());
    }
:
	rule__EntityElements__UnorderedGroup_1__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__EntityElements__UnorderedGroup_1__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getEntityElementsAccess().getChildsAssignment_1_0()); }
						(rule__EntityElements__ChildsAssignment_1_0)
						{ after(grammarAccess.getEntityElementsAccess().getChildsAssignment_1_0()); }
					)
					(
						{ before(grammarAccess.getEntityElementsAccess().getChildsAssignment_1_0()); }
						((rule__EntityElements__ChildsAssignment_1_0)=>rule__EntityElements__ChildsAssignment_1_0)*
						{ after(grammarAccess.getEntityElementsAccess().getChildsAssignment_1_0()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getEntityElementsAccess().getPropertiesAssignment_1_1()); }
						(rule__EntityElements__PropertiesAssignment_1_1)
						{ after(grammarAccess.getEntityElementsAccess().getPropertiesAssignment_1_1()); }
					)
					(
						{ before(grammarAccess.getEntityElementsAccess().getPropertiesAssignment_1_1()); }
						((rule__EntityElements__PropertiesAssignment_1_1)=>rule__EntityElements__PropertiesAssignment_1_1)*
						{ after(grammarAccess.getEntityElementsAccess().getPropertiesAssignment_1_1()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getEntityElementsAccess().getReferencesAssignment_1_2()); }
						(rule__EntityElements__ReferencesAssignment_1_2)
						{ after(grammarAccess.getEntityElementsAccess().getReferencesAssignment_1_2()); }
					)
					(
						{ before(grammarAccess.getEntityElementsAccess().getReferencesAssignment_1_2()); }
						((rule__EntityElements__ReferencesAssignment_1_2)=>rule__EntityElements__ReferencesAssignment_1_2)*
						{ after(grammarAccess.getEntityElementsAccess().getReferencesAssignment_1_2()); }
					)					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getEntityElementsAccess().getReferenceListsAssignment_1_3()); }
						(rule__EntityElements__ReferenceListsAssignment_1_3)
						{ after(grammarAccess.getEntityElementsAccess().getReferenceListsAssignment_1_3()); }
					)
					(
						{ before(grammarAccess.getEntityElementsAccess().getReferenceListsAssignment_1_3()); }
						((rule__EntityElements__ReferenceListsAssignment_1_3)=>rule__EntityElements__ReferenceListsAssignment_1_3)*
						{ after(grammarAccess.getEntityElementsAccess().getReferenceListsAssignment_1_3()); }
					)					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1());
	restoreStackSize(stackSize);
}


rule__EntityElements__UnorderedGroup_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityElements__UnorderedGroup_1__Impl
	rule__EntityElements__UnorderedGroup_1__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityElements__UnorderedGroup_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityElements__UnorderedGroup_1__Impl
	rule__EntityElements__UnorderedGroup_1__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityElements__UnorderedGroup_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityElements__UnorderedGroup_1__Impl
	rule__EntityElements__UnorderedGroup_1__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityElements__UnorderedGroup_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EntityElements__UnorderedGroup_1__Impl
;
finally {
	restoreStackSize(stackSize);
}










rule__Model__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getElementsElementParserRuleCall_1_0()); }
	ruleElement{ after(grammarAccess.getModelAccess().getElementsElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getAnnotationsAnnotationGroupParserRuleCall_0_0()); }
	ruleAnnotationGroup{ after(grammarAccess.getPackageAccess().getAnnotationsAnnotationGroupParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ElementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getElementsElementParserRuleCall_4_0()); }
	ruleElement{ after(grammarAccess.getPackageAccess().getElementsElementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getAnnotationsAnnotationGroupParserRuleCall_0_0()); }
	ruleAnnotationGroup{ after(grammarAccess.getDataTypeAccess().getAnnotationsAnnotationGroupParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__FormatedFieldsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeAccess().getFormatedFieldsDataTypeFieldParserRuleCall_4_0()); }
	ruleDataTypeField{ after(grammarAccess.getDataTypeAccess().getFormatedFieldsDataTypeFieldParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__PatternAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeFieldAccess().getPatternPatternTypeParserRuleCall_0_0_0()); }
	rulePatternType{ after(grammarAccess.getDataTypeFieldAccess().getPatternPatternTypeParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__FormatAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeFieldAccess().getFormatPATTERN_STRINGTerminalRuleCall_0_1_0()); }
	RULE_PATTERN_STRING{ after(grammarAccess.getDataTypeFieldAccess().getFormatPATTERN_STRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeField__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeFieldAccess().getTypeDataTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getDataTypeFieldAccess().getTypeDataTypeQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getDataTypeFieldAccess().getTypeDataTypeQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDataTypeFieldAccess().getTypeDataTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternType__REGEXAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternTypeAccess().getREGEXRegexKeyword_0_0()); }
(
{ before(grammarAccess.getPatternTypeAccess().getREGEXRegexKeyword_0_0()); }

	'@regex' 

{ after(grammarAccess.getPatternTypeAccess().getREGEXRegexKeyword_0_0()); }
)

{ after(grammarAccess.getPatternTypeAccess().getREGEXRegexKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternType__DATEAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternTypeAccess().getDATEDateKeyword_1_0()); }
(
{ before(grammarAccess.getPatternTypeAccess().getDATEDateKeyword_1_0()); }

	'@date' 

{ after(grammarAccess.getPatternTypeAccess().getDATEDateKeyword_1_0()); }
)

{ after(grammarAccess.getPatternTypeAccess().getDATEDateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PatternType__NUMBERAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternTypeAccess().getNUMBERNumberKeyword_2_0()); }
(
{ before(grammarAccess.getPatternTypeAccess().getNUMBERNumberKeyword_2_0()); }

	'@number' 

{ after(grammarAccess.getPatternTypeAccess().getNUMBERNumberKeyword_2_0()); }
)

{ after(grammarAccess.getPatternTypeAccess().getNUMBERNumberKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAnnotationsAnnotationGroupParserRuleCall_0_0()); }
	ruleAnnotationGroup{ after(grammarAccess.getEntityAccess().getAnnotationsAnnotationGroupParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ParentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getParentParentParserRuleCall_4_0()); }
	ruleParent{ after(grammarAccess.getEntityAccess().getParentParentParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ElementsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getElementsEntityElementsParserRuleCall_5_0()); }
	ruleEntityElements{ after(grammarAccess.getEntityAccess().getElementsEntityElementsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__GroupsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroupsEntityGroupParserRuleCall_6_0()); }
	ruleEntityGroup{ after(grammarAccess.getEntityAccess().getGroupsEntityGroupParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityGroup__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityGroupAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEntityGroupAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityGroup__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityGroupAccess().getElementsEntityElementsParserRuleCall_3_0()); }
	ruleEntityElements{ after(grammarAccess.getEntityGroupAccess().getElementsEntityElementsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityElements__ChildsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityElementsAccess().getChildsChildParserRuleCall_1_0_0()); }
	ruleChild{ after(grammarAccess.getEntityElementsAccess().getChildsChildParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityElements__PropertiesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityElementsAccess().getPropertiesPropertyParserRuleCall_1_1_0()); }
	ruleProperty{ after(grammarAccess.getEntityElementsAccess().getPropertiesPropertyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityElements__ReferencesAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityElementsAccess().getReferencesReferenceParserRuleCall_1_2_0()); }
	ruleReference{ after(grammarAccess.getEntityElementsAccess().getReferencesReferenceParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityElements__ReferenceListsAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityElementsAccess().getReferenceListsReferenceListParserRuleCall_1_3_0()); }
	ruleReferenceList{ after(grammarAccess.getEntityElementsAccess().getReferenceListsReferenceListParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentAccess().getTypeEntityCrossReference_1_0()); }
(
{ before(grammarAccess.getParentAccess().getTypeEntityQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getParentAccess().getTypeEntityQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getParentAccess().getTypeEntityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parent__AnnotationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentAccess().getAnnotationsAnnotationGroupParserRuleCall_2_0()); }
	ruleAnnotationGroup{ after(grammarAccess.getParentAccess().getAnnotationsAnnotationGroupParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Child__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildAccess().getTypeEntityCrossReference_1_0()); }
(
{ before(grammarAccess.getChildAccess().getTypeEntityQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getChildAccess().getTypeEntityQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getChildAccess().getTypeEntityCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Child__AnnotationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildAccess().getAnnotationsAnnotationGroupParserRuleCall_2_0()); }
	ruleAnnotationGroup{ after(grammarAccess.getChildAccess().getAnnotationsAnnotationGroupParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__OptionalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getOptionalQuestionMarkKeyword_1_0()); }
(
{ before(grammarAccess.getPropertyAccess().getOptionalQuestionMarkKeyword_1_0()); }

	'?' 

{ after(grammarAccess.getPropertyAccess().getOptionalQuestionMarkKeyword_1_0()); }
)

{ after(grammarAccess.getPropertyAccess().getOptionalQuestionMarkKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getPropertyAccess().getTypeTypeQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getPropertyAccess().getTypeTypeQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getPropertyAccess().getTypeTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__AnnotationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAnnotationsAnnotationGroupParserRuleCall_4_0()); }
	ruleAnnotationGroup{ after(grammarAccess.getPropertyAccess().getAnnotationsAnnotationGroupParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__OptionalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getOptionalQuestionMarkKeyword_1_0()); }
(
{ before(grammarAccess.getReferenceAccess().getOptionalQuestionMarkKeyword_1_0()); }

	'?' 

{ after(grammarAccess.getReferenceAccess().getOptionalQuestionMarkKeyword_1_0()); }
)

{ after(grammarAccess.getReferenceAccess().getOptionalQuestionMarkKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__EntityAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getEntityEntityCrossReference_3_0()); }
(
{ before(grammarAccess.getReferenceAccess().getEntityEntityQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getReferenceAccess().getEntityEntityQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getReferenceAccess().getEntityEntityCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__AnnotationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getAnnotationsAnnotationGroupParserRuleCall_4_0()); }
	ruleAnnotationGroup{ after(grammarAccess.getReferenceAccess().getAnnotationsAnnotationGroupParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getReferenceListAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__ReferenceAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getReferenceReferenceCrossReference_1_0_1_0()); }
(
{ before(grammarAccess.getReferenceListAccess().getReferenceReferenceIDTerminalRuleCall_1_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceListAccess().getReferenceReferenceIDTerminalRuleCall_1_0_1_0_1()); }
)
{ after(grammarAccess.getReferenceListAccess().getReferenceReferenceCrossReference_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__EntityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getEntityEntityCrossReference_2_0()); }
(
{ before(grammarAccess.getReferenceListAccess().getEntityEntityQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getReferenceListAccess().getEntityEntityQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getReferenceListAccess().getEntityEntityCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceList__AnnotationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListAccess().getAnnotationsAnnotationGroupParserRuleCall_3_0()); }
	ruleAnnotationGroup{ after(grammarAccess.getReferenceListAccess().getAnnotationsAnnotationGroupParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__TypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getTypesAnnoTypesParserRuleCall_1_0()); }
	ruleAnnoTypes{ after(grammarAccess.getAnnotationAccess().getTypesAnnoTypesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__InstancesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getInstancesAnnotationInstanceParserRuleCall_2_0()); }
	ruleAnnotationInstance{ after(grammarAccess.getAnnotationAccess().getInstancesAnnotationInstanceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__NameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNameIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationAccess().getNameIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__MandatoriesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getMandatoriesAnnotationMandatoryPropertyParserRuleCall_7_0()); }
	ruleAnnotationMandatoryProperty{ after(grammarAccess.getAnnotationAccess().getMandatoriesAnnotationMandatoryPropertyParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__OptionalsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getOptionalsAnnotationOptionalPropertyParserRuleCall_8_0()); }
	ruleAnnotationOptionalProperty{ after(grammarAccess.getAnnotationAccess().getOptionalsAnnotationOptionalPropertyParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMandatoryProperty__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMandatoryProperty__GroupAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getGroupGroupTypeParserRuleCall_2_0_0()); }
	ruleGroupType{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getGroupGroupTypeParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMandatoryProperty__TypeAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getTypeValueTypeEnumRuleCall_2_1_0_0()); }
	ruleValueType{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getTypeValueTypeEnumRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationMandatoryProperty__MultiAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getMultiAsteriskKeyword_2_1_1_0()); }
(
{ before(grammarAccess.getAnnotationMandatoryPropertyAccess().getMultiAsteriskKeyword_2_1_1_0()); }

	'*' 

{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getMultiAsteriskKeyword_2_1_1_0()); }
)

{ after(grammarAccess.getAnnotationMandatoryPropertyAccess().getMultiAsteriskKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__GroupAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getGroupGroupTypeParserRuleCall_3_0_0()); }
	ruleGroupType{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getGroupGroupTypeParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__TypeAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getTypeValueTypeEnumRuleCall_3_1_0_0()); }
	ruleValueType{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getTypeValueTypeEnumRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationOptionalProperty__MultiAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getMultiAsteriskKeyword_3_1_1_0()); }
(
{ before(grammarAccess.getAnnotationOptionalPropertyAccess().getMultiAsteriskKeyword_3_1_1_0()); }

	'*' 

{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getMultiAsteriskKeyword_3_1_1_0()); }
)

{ after(grammarAccess.getAnnotationOptionalPropertyAccess().getMultiAsteriskKeyword_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationGroup__InstancesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationGroupAccess().getInstancesAnnotationInstanceParserRuleCall_1_0()); }
	ruleAnnotationInstance{ after(grammarAccess.getAnnotationGroupAccess().getInstancesAnnotationInstanceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInstance__AnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationInstanceAccess().getAnnotationAnnotationCrossReference_0_0()); }
(
{ before(grammarAccess.getAnnotationInstanceAccess().getAnnotationAnnotationQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAnnotationInstanceAccess().getAnnotationAnnotationQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAnnotationInstanceAccess().getAnnotationAnnotationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInstance__ValuesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationInstanceAccess().getValuesAnnotationValueParserRuleCall_1_0()); }
	ruleAnnotationValue{ after(grammarAccess.getAnnotationInstanceAccess().getValuesAnnotationValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationInstance__PropertiesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationInstanceAccess().getPropertiesAnnotationHiddenPropertyParserRuleCall_2_1_0()); }
	ruleAnnotationHiddenProperty{ after(grammarAccess.getAnnotationInstanceAccess().getPropertiesAnnotationHiddenPropertyParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationHiddenProperty__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationHiddenPropertyAccess().getPropertyAnnotationPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getAnnotationHiddenPropertyAccess().getPropertyAnnotationPropertyIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAnnotationHiddenPropertyAccess().getPropertyAnnotationPropertyIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAnnotationHiddenPropertyAccess().getPropertyAnnotationPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationHiddenProperty__ValuesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationHiddenPropertyAccess().getValuesAnnotationValueCrossReference_1_0()); }
(
{ before(grammarAccess.getAnnotationHiddenPropertyAccess().getValuesAnnotationValueIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAnnotationHiddenPropertyAccess().getValuesAnnotationValueIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAnnotationHiddenPropertyAccess().getValuesAnnotationValueCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupType__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupTypeAccess().getTypeGroupKeyword_0_0()); }
(
{ before(grammarAccess.getGroupTypeAccess().getTypeGroupKeyword_0_0()); }

	'#group' 

{ after(grammarAccess.getGroupTypeAccess().getTypeGroupKeyword_0_0()); }
)

{ after(grammarAccess.getGroupTypeAccess().getTypeGroupKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupTypeAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getGroupTypeAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageTypeAccess().getTypePackageKeyword_0()); }
(
{ before(grammarAccess.getPackageTypeAccess().getTypePackageKeyword_0()); }

	'#package' 

{ after(grammarAccess.getPackageTypeAccess().getTypePackageKeyword_0()); }
)

{ after(grammarAccess.getPackageTypeAccess().getTypePackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeTypeAccess().getTypeDatatypeKeyword_0()); }
(
{ before(grammarAccess.getDataTypeTypeAccess().getTypeDatatypeKeyword_0()); }

	'#datatype' 

{ after(grammarAccess.getDataTypeTypeAccess().getTypeDatatypeKeyword_0()); }
)

{ after(grammarAccess.getDataTypeTypeAccess().getTypeDatatypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getTypeAnnotationKeyword_0()); }
(
{ before(grammarAccess.getAnnotationTypeAccess().getTypeAnnotationKeyword_0()); }

	'#annotation' 

{ after(grammarAccess.getAnnotationTypeAccess().getTypeAnnotationKeyword_0()); }
)

{ after(grammarAccess.getAnnotationTypeAccess().getTypeAnnotationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EntityType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityTypeAccess().getTypeEntityKeyword_0()); }
(
{ before(grammarAccess.getEntityTypeAccess().getTypeEntityKeyword_0()); }

	'#entity' 

{ after(grammarAccess.getEntityTypeAccess().getTypeEntityKeyword_0()); }
)

{ after(grammarAccess.getEntityTypeAccess().getTypeEntityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyTypeAccess().getTypePropertyKeyword_0()); }
(
{ before(grammarAccess.getPropertyTypeAccess().getTypePropertyKeyword_0()); }

	'#property' 

{ after(grammarAccess.getPropertyTypeAccess().getTypePropertyKeyword_0()); }
)

{ after(grammarAccess.getPropertyTypeAccess().getTypePropertyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTypeAccess().getTypeReferenceKeyword_0()); }
(
{ before(grammarAccess.getReferenceTypeAccess().getTypeReferenceKeyword_0()); }

	'#reference' 

{ after(grammarAccess.getReferenceTypeAccess().getTypeReferenceKeyword_0()); }
)

{ after(grammarAccess.getReferenceTypeAccess().getTypeReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceListType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceListTypeAccess().getTypeReferenceListKeyword_0()); }
(
{ before(grammarAccess.getReferenceListTypeAccess().getTypeReferenceListKeyword_0()); }

	'#reference-list' 

{ after(grammarAccess.getReferenceListTypeAccess().getTypeReferenceListKeyword_0()); }
)

{ after(grammarAccess.getReferenceListTypeAccess().getTypeReferenceListKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParentType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParentTypeAccess().getTypeParentKeyword_0()); }
(
{ before(grammarAccess.getParentTypeAccess().getTypeParentKeyword_0()); }

	'#parent' 

{ after(grammarAccess.getParentTypeAccess().getTypeParentKeyword_0()); }
)

{ after(grammarAccess.getParentTypeAccess().getTypeParentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChildType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildTypeAccess().getTypeChildKeyword_0()); }
(
{ before(grammarAccess.getChildTypeAccess().getTypeChildKeyword_0()); }

	'#child' 

{ after(grammarAccess.getChildTypeAccess().getTypeChildKeyword_0()); }
)

{ after(grammarAccess.getChildTypeAccess().getTypeChildKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_0()); }
	ruleInteger{ after(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleValueAccess().getValueDoubleParserRuleCall_0()); }
	ruleDouble{ after(grammarAccess.getDoubleValueAccess().getValueDoubleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeValue__FromAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeValueAccess().getFromIntegerParserRuleCall_0_0_0()); }
	ruleInteger{ after(grammarAccess.getRangeValueAccess().getFromIntegerParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeValue__FromInfAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeValueAccess().getFromInfAsteriskKeyword_0_1_0()); }
(
{ before(grammarAccess.getRangeValueAccess().getFromInfAsteriskKeyword_0_1_0()); }

	'*' 

{ after(grammarAccess.getRangeValueAccess().getFromInfAsteriskKeyword_0_1_0()); }
)

{ after(grammarAccess.getRangeValueAccess().getFromInfAsteriskKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeValue__ToAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeValueAccess().getToIntegerParserRuleCall_2_0_0()); }
	ruleInteger{ after(grammarAccess.getRangeValueAccess().getToIntegerParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeValue__ToInfAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeValueAccess().getToInfAsteriskKeyword_2_1_0()); }
(
{ before(grammarAccess.getRangeValueAccess().getToInfAsteriskKeyword_2_1_0()); }

	'*' 

{ after(grammarAccess.getRangeValueAccess().getToInfAsteriskKeyword_2_1_0()); }
)

{ after(grammarAccess.getRangeValueAccess().getToInfAsteriskKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormatRangeValue__FromAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormatRangeValueAccess().getFromSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getFormatRangeValueAccess().getFromSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormatRangeValue__ToAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormatRangeValueAccess().getToSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFormatRangeValueAccess().getToSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t')+;

RULE_END_LINE : '\r'? '\n';

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_PATTERN_STRING : '\'' ('\\' .|~(('\\'|'\'')))* '\'';

RULE_ANY_OTHER : .;


