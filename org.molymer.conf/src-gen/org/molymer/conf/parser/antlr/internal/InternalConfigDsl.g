/*
 * generated by Xtext
 */
grammar InternalConfigDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.molymer.conf.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.molymer.conf.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.molymer.conf.services.ConfigDslGrammarAccess;

}

@parser::members {

 	private ConfigDslGrammarAccess grammarAccess;
 	
    public InternalConfigDslParser(TokenStream input, ConfigDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Config";	
   	}
   	
   	@Override
   	protected ConfigDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleConfig
entryRuleConfig returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigRule()); }
	 iv_ruleConfig=ruleConfig 
	 { $current=$iv_ruleConfig.current; } 
	 EOF 
;

// Rule Config
ruleConfig returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='config' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConfigAccess().getConfigKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='appName' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConfigAccess().getAppNameKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConfigAccess().getEqualsSignKeyword_3());
    }
(
(
		lv_appName_4_0=RULE_STRING
		{
			newLeafNode(lv_appName_4_0, grammarAccess.getConfigAccess().getAppNameSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"appName",
        		lv_appName_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='mainClass' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConfigAccess().getMainClassKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConfigAccess().getEqualsSignKeyword_6());
    }
(
(
		lv_mainClass_7_0=RULE_STRING
		{
			newLeafNode(lv_mainClass_7_0, grammarAccess.getConfigAccess().getMainClassSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mainClass",
        		lv_mainClass_7_0, 
        		"STRING");
	    }

)
)	otherlv_8='srcFolder' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getConfigAccess().getSrcFolderKeyword_8());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConfigAccess().getEqualsSignKeyword_9());
    }
(
(
		lv_srcFolder_10_0=RULE_STRING
		{
			newLeafNode(lv_srcFolder_10_0, grammarAccess.getConfigAccess().getSrcFolderSTRINGTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"srcFolder",
        		lv_srcFolder_10_0, 
        		"STRING");
	    }

)
)	otherlv_11='outFolder' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getConfigAccess().getOutFolderKeyword_11());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getConfigAccess().getEqualsSignKeyword_12());
    }
(
(
		lv_outFolder_13_0=RULE_STRING
		{
			newLeafNode(lv_outFolder_13_0, grammarAccess.getConfigAccess().getOutFolderSTRINGTerminalRuleCall_13_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"outFolder",
        		lv_outFolder_13_0, 
        		"STRING");
	    }

)
)	otherlv_14='generators' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getConfigAccess().getGeneratorsKeyword_14());
    }
	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_15());
    }
(	otherlv_16='[' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getConfigAccess().getLeftSquareBracketKeyword_16_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConfigRule());
	        }
        }
	otherlv_17=RULE_ID
	{
		newLeafNode(otherlv_17, grammarAccess.getConfigAccess().getSelectorsGeneratorCrossReference_16_1_0()); 
	}

)
)+	otherlv_18=']' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getConfigAccess().getRightSquareBracketKeyword_16_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getConfigAccess().getGeneratorsGeneratorParserRuleCall_17_0()); 
	    }
		lv_generators_19_0=ruleGenerator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConfigRule());
	        }
       		add(
       			$current, 
       			"generators",
        		lv_generators_19_0, 
        		"Generator");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_18());
    }
	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_19());
    }
)
;





// Entry rule entryRuleGenerator
entryRuleGenerator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeneratorRule()); }
	 iv_ruleGenerator=ruleGenerator 
	 { $current=$iv_ruleGenerator.current; } 
	 EOF 
;

// Rule Generator
ruleGenerator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getGeneratorAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeneratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeneratorAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_bundle_2_0=RULE_STRING
		{
			newLeafNode(lv_bundle_2_0, grammarAccess.getGeneratorAccess().getBundleSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeneratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bundle",
        		lv_bundle_2_0, 
        		"STRING");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGeneratorAccess().getColonKeyword_3());
    }
(
(
		lv_genClass_4_0=RULE_STRING
		{
			newLeafNode(lv_genClass_4_0, grammarAccess.getGeneratorAccess().getGenClassSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeneratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"genClass",
        		lv_genClass_4_0, 
        		"STRING");
	    }

)
))
;







RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


