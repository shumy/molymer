/*
 * generated by Xtext
 */
grammar InternalConfigDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.molymer.conf.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.molymer.conf.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.molymer.conf.services.ConfigDslGrammarAccess;

}

@parser::members {
 
 	private ConfigDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ConfigDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleConfig
entryRuleConfig 
:
{ before(grammarAccess.getConfigRule()); }
	 ruleConfig
{ after(grammarAccess.getConfigRule()); } 
	 EOF 
;

// Rule Config
ruleConfig
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigAccess().getGroup()); }
(rule__Config__Group__0)
{ after(grammarAccess.getConfigAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenerator
entryRuleGenerator 
:
{ before(grammarAccess.getGeneratorRule()); }
	 ruleGenerator
{ after(grammarAccess.getGeneratorRule()); } 
	 EOF 
;

// Rule Generator
ruleGenerator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGeneratorAccess().getGroup()); }
(rule__Generator__Group__0)
{ after(grammarAccess.getGeneratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Config__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__0__Impl
	rule__Config__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getConfigKeyword_0()); }

	'config' 

{ after(grammarAccess.getConfigAccess().getConfigKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__1__Impl
	rule__Config__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__2__Impl
	rule__Config__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getAppNameKeyword_2()); }

	'appName' 

{ after(grammarAccess.getConfigAccess().getAppNameKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__3__Impl
	rule__Config__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getConfigAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__4__Impl
	rule__Config__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getAppNameAssignment_4()); }
(rule__Config__AppNameAssignment_4)
{ after(grammarAccess.getConfigAccess().getAppNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__5__Impl
	rule__Config__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMainClassKeyword_5()); }

	'mainClass' 

{ after(grammarAccess.getConfigAccess().getMainClassKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__6__Impl
	rule__Config__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getEqualsSignKeyword_6()); }

	'=' 

{ after(grammarAccess.getConfigAccess().getEqualsSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__7__Impl
	rule__Config__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMainClassAssignment_7()); }
(rule__Config__MainClassAssignment_7)
{ after(grammarAccess.getConfigAccess().getMainClassAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__8__Impl
	rule__Config__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getSrcFolderKeyword_8()); }

	'srcFolder' 

{ after(grammarAccess.getConfigAccess().getSrcFolderKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__9__Impl
	rule__Config__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getEqualsSignKeyword_9()); }

	'=' 

{ after(grammarAccess.getConfigAccess().getEqualsSignKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__10__Impl
	rule__Config__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getSrcFolderAssignment_10()); }
(rule__Config__SrcFolderAssignment_10)
{ after(grammarAccess.getConfigAccess().getSrcFolderAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__11__Impl
	rule__Config__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getOutFolderKeyword_11()); }

	'outFolder' 

{ after(grammarAccess.getConfigAccess().getOutFolderKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__12__Impl
	rule__Config__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getEqualsSignKeyword_12()); }

	'=' 

{ after(grammarAccess.getConfigAccess().getEqualsSignKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__13__Impl
	rule__Config__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getOutFolderAssignment_13()); }
(rule__Config__OutFolderAssignment_13)
{ after(grammarAccess.getConfigAccess().getOutFolderAssignment_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__14__Impl
	rule__Config__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getGeneratorsKeyword_14()); }

	'generators' 

{ after(grammarAccess.getConfigAccess().getGeneratorsKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__15__Impl
	rule__Config__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_15()); }

	'{' 

{ after(grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__16__Impl
	rule__Config__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getGroup_16()); }
(rule__Config__Group_16__0)?
{ after(grammarAccess.getConfigAccess().getGroup_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__17__Impl
	rule__Config__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConfigAccess().getGeneratorsAssignment_17()); }
(rule__Config__GeneratorsAssignment_17)
{ after(grammarAccess.getConfigAccess().getGeneratorsAssignment_17()); }
)
(
{ before(grammarAccess.getConfigAccess().getGeneratorsAssignment_17()); }
(rule__Config__GeneratorsAssignment_17)*
{ after(grammarAccess.getConfigAccess().getGeneratorsAssignment_17()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__18__Impl
	rule__Config__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_18()); }

	'}' 

{ after(grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__19
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group__19__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__19__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_19()); }

	'}' 

{ after(grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}










































rule__Config__Group_16__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_16__0__Impl
	rule__Config__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_16__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getLeftSquareBracketKeyword_16_0()); }

	'[' 

{ after(grammarAccess.getConfigAccess().getLeftSquareBracketKeyword_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_16__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_16__1__Impl
	rule__Config__Group_16__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_16__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConfigAccess().getSelectorsAssignment_16_1()); }
(rule__Config__SelectorsAssignment_16_1)
{ after(grammarAccess.getConfigAccess().getSelectorsAssignment_16_1()); }
)
(
{ before(grammarAccess.getConfigAccess().getSelectorsAssignment_16_1()); }
(rule__Config__SelectorsAssignment_16_1)*
{ after(grammarAccess.getConfigAccess().getSelectorsAssignment_16_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group_16__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Config__Group_16__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group_16__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getRightSquareBracketKeyword_16_2()); }

	']' 

{ after(grammarAccess.getConfigAccess().getRightSquareBracketKeyword_16_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Generator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__0__Impl
	rule__Generator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getNameAssignment_0()); }
(rule__Generator__NameAssignment_0)
{ after(grammarAccess.getGeneratorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__1__Impl
	rule__Generator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getGeneratorAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__2__Impl
	rule__Generator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getBundleAssignment_2()); }
(rule__Generator__BundleAssignment_2)
{ after(grammarAccess.getGeneratorAccess().getBundleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__3__Impl
	rule__Generator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getGeneratorAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Generator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Generator__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getGenClassAssignment_4()); }
(rule__Generator__GenClassAssignment_4)
{ after(grammarAccess.getGeneratorAccess().getGenClassAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}















rule__Config__AppNameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getAppNameSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getConfigAccess().getAppNameSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Config__MainClassAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getMainClassSTRINGTerminalRuleCall_7_0()); }
	RULE_STRING{ after(grammarAccess.getConfigAccess().getMainClassSTRINGTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Config__SrcFolderAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getSrcFolderSTRINGTerminalRuleCall_10_0()); }
	RULE_STRING{ after(grammarAccess.getConfigAccess().getSrcFolderSTRINGTerminalRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Config__OutFolderAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getOutFolderSTRINGTerminalRuleCall_13_0()); }
	RULE_STRING{ after(grammarAccess.getConfigAccess().getOutFolderSTRINGTerminalRuleCall_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Config__SelectorsAssignment_16_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getSelectorsGeneratorCrossReference_16_1_0()); }
(
{ before(grammarAccess.getConfigAccess().getSelectorsGeneratorIDTerminalRuleCall_16_1_0_1()); }
	RULE_ID{ after(grammarAccess.getConfigAccess().getSelectorsGeneratorIDTerminalRuleCall_16_1_0_1()); }
)
{ after(grammarAccess.getConfigAccess().getSelectorsGeneratorCrossReference_16_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Config__GeneratorsAssignment_17
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigAccess().getGeneratorsGeneratorParserRuleCall_17_0()); }
	ruleGenerator{ after(grammarAccess.getConfigAccess().getGeneratorsGeneratorParserRuleCall_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getGeneratorAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__BundleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getBundleSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getGeneratorAccess().getBundleSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Generator__GenClassAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGeneratorAccess().getGenClassSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getGeneratorAccess().getGenClassSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


