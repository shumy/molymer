/*
 * generated by Xtext
 */
grammar InternalModelDsl;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.molymer.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.molymer.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.molymer.services.ModelDslGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private ModelDslGrammarAccess grammarAccess;
 	
    public InternalModelDslParser(TokenStream input, ModelDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected ModelDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getElementsElementParserRuleCall_1_0()); 
	    }
		lv_elements_1_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	 iv_ruleElement=ruleElement 
	 { $current=$iv_ruleElement.current; } 
	 EOF 
;

// Rule Element
ruleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementAccess().getTypeParserRuleCall_0()); 
    }
    this_Type_0=ruleType
    { 
        $current = $this_Type_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementAccess().getAnnotationParserRuleCall_1()); 
    }
    this_Annotation_1=ruleAnnotation
    { 
        $current = $this_Annotation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getElementAccess().getPackageParserRuleCall_2()); 
    }
    this_Package_2=rulePackage
    { 
        $current = $this_Package_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getEntityParserRuleCall_0()); 
    }
    this_Entity_0=ruleEntity
    { 
        $current = $this_Entity_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_1()); 
    }
    this_DataType_1=ruleDataType
    { 
        $current = $this_DataType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	 iv_rulePackage=rulePackage 
	 { $current=$iv_rulePackage.current; } 
	 EOF 
;

// Rule Package
rulePackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getAnnotationsAnnotationGroupParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleAnnotationGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"AnnotationGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='package' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPackageAccess().getPackageKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getElementsElementParserRuleCall_4_0()); 
	    }
		lv_elements_4_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	 iv_ruleDataType=ruleDataType 
	 { $current=$iv_ruleDataType.current; } 
	 EOF 
;

// Rule DataType
ruleDataType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getAnnotationsAnnotationGroupParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleAnnotationGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"AnnotationGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='datatype' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeAccess().getDatatypeKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataTypeAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeAccess().getFormatedFieldsDataTypeFieldParserRuleCall_4_0()); 
	    }
		lv_formatedFields_4_0=ruleDataTypeField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeRule());
	        }
       		add(
       			$current, 
       			"formatedFields",
        		lv_formatedFields_4_0, 
        		"DataTypeField");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataTypeAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDataTypeField
entryRuleDataTypeField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeFieldRule()); }
	 iv_ruleDataTypeField=ruleDataTypeField 
	 { $current=$iv_ruleDataTypeField.current; } 
	 EOF 
;

// Rule DataTypeField
ruleDataTypeField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeFieldAccess().getPatternPatternTypeParserRuleCall_0_0_0()); 
	    }
		lv_pattern_0_0=rulePatternType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeFieldRule());
	        }
       		set(
       			$current, 
       			"pattern",
        		lv_pattern_0_0, 
        		"PatternType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_format_1_0=RULE_PATTERN_STRING
		{
			newLeafNode(lv_format_1_0, grammarAccess.getDataTypeFieldAccess().getFormatPATTERN_STRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"format",
        		lv_format_1_0, 
        		"PATTERN_STRING");
	    }

)
))
    |(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeFieldRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDataTypeFieldAccess().getTypeDataTypeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePatternType
entryRulePatternType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatternTypeRule()); }
	 iv_rulePatternType=rulePatternType 
	 { $current=$iv_rulePatternType.current; } 
	 EOF 
;

// Rule PatternType
rulePatternType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_REGEX_0_0=	'@regex' 
    {
        newLeafNode(lv_REGEX_0_0, grammarAccess.getPatternTypeAccess().getREGEXRegexKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatternTypeRule());
	        }
       		setWithLastConsumed($current, "REGEX", lv_REGEX_0_0, "@regex");
	    }

)
)
    |(
(
		lv_DATE_1_0=	'@date' 
    {
        newLeafNode(lv_DATE_1_0, grammarAccess.getPatternTypeAccess().getDATEDateKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatternTypeRule());
	        }
       		setWithLastConsumed($current, "DATE", lv_DATE_1_0, "@date");
	    }

)
)
    |(
(
		lv_NUMBER_2_0=	'@number' 
    {
        newLeafNode(lv_NUMBER_2_0, grammarAccess.getPatternTypeAccess().getNUMBERNumberKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatternTypeRule());
	        }
       		setWithLastConsumed($current, "NUMBER", lv_NUMBER_2_0, "@number");
	    }

)
))
;





// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	 iv_ruleEntity=ruleEntity 
	 { $current=$iv_ruleEntity.current; } 
	 EOF 
;

// Rule Entity
ruleEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getAnnotationsAnnotationGroupParserRuleCall_0_0()); 
	    }
		lv_annotations_0_0=ruleAnnotationGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_0_0, 
        		"AnnotationGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='entity' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getEntityKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getParentParentParserRuleCall_4_0()); 
	    }
		lv_parent_4_0=ruleParent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		set(
       			$current, 
       			"parent",
        		lv_parent_4_0, 
        		"Parent");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getElementsEntityElementsParserRuleCall_5_0()); 
	    }
		lv_elements_5_0=ruleEntityElements		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		set(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"EntityElements");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityAccess().getGroupsEntityGroupParserRuleCall_6_0()); 
	    }
		lv_groups_6_0=ruleEntityGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRule());
	        }
       		add(
       			$current, 
       			"groups",
        		lv_groups_6_0, 
        		"EntityGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleEntityGroup
entryRuleEntityGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityGroupRule()); }
	 iv_ruleEntityGroup=ruleEntityGroup 
	 { $current=$iv_ruleEntityGroup.current; } 
	 EOF 
;

// Rule EntityGroup
ruleEntityGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='group' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntityGroupAccess().getGroupKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEntityGroupAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityGroupRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEntityGroupAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityGroupAccess().getElementsEntityElementsParserRuleCall_3_0()); 
	    }
		lv_elements_3_0=ruleEntityElements		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityGroupRule());
	        }
       		set(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"EntityElements");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEntityGroupAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleEntityElements
entryRuleEntityElements returns [EObject current=null] 
	@init { 
		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
			grammarAccess.getEntityElementsAccess().getUnorderedGroup_1()
		);
	}
	:
	{ newCompositeNode(grammarAccess.getEntityElementsRule()); }
	 iv_ruleEntityElements=ruleEntityElements 
	 { $current=$iv_ruleEntityElements.current; } 
	 EOF 
;
finally {
	myUnorderedGroupState.restore();
}

// Rule EntityElements
ruleEntityElements returns [EObject current=null] 
    @init { enterRule(); 
		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
			grammarAccess.getEntityElementsAccess().getUnorderedGroup_1()
		);
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEntityElementsAccess().getEntityElementsAction_0(),
            $current);
    }
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 0);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityElementsAccess().getChildsChildParserRuleCall_1_0_0()); 
	    }
		lv_childs_2_0=ruleChild		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityElementsRule());
	        }
       		add(
       			$current, 
       			"childs",
        		lv_childs_2_0, 
        		"Child");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityElementsAccess().getPropertiesPropertyParserRuleCall_1_1_0()); 
	    }
		lv_properties_3_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityElementsRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_3_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 2);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityElementsAccess().getReferencesReferenceParserRuleCall_1_2_0()); 
	    }
		lv_references_4_0=ruleReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityElementsRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_4_0, 
        		"Reference");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1(), 3);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityElementsAccess().getReferenceListsReferenceListParserRuleCall_1_3_0()); 
	    }
		lv_referenceLists_5_0=ruleReferenceList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityElementsRule());
	        }
       		add(
       			$current, 
       			"referenceLists",
        		lv_referenceLists_5_0, 
        		"ReferenceList");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getEntityElementsAccess().getUnorderedGroup_1());
	}

))
;
finally {
	myUnorderedGroupState.restore();
}





// Entry rule entryRuleContainer
entryRuleContainer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContainerRule()); }
	 iv_ruleContainer=ruleContainer 
	 { $current=$iv_ruleContainer.current; } 
	 EOF 
;

// Rule Container
ruleContainer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getContainerAccess().getParentParserRuleCall_0()); 
    }
    this_Parent_0=ruleParent
    { 
        $current = $this_Parent_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getContainerAccess().getChildParserRuleCall_1()); 
    }
    this_Child_1=ruleChild
    { 
        $current = $this_Child_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleField
entryRuleField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	 iv_ruleField=ruleField 
	 { $current=$iv_ruleField.current; } 
	 EOF 
;

// Rule Field
ruleField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFieldAccess().getPropertyParserRuleCall_0()); 
    }
    this_Property_0=ruleProperty
    { 
        $current = $this_Property_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFieldAccess().getReferenceParserRuleCall_1()); 
    }
    this_Reference_1=ruleReference
    { 
        $current = $this_Reference_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFieldAccess().getReferenceListParserRuleCall_2()); 
    }
    this_ReferenceList_2=ruleReferenceList
    { 
        $current = $this_ReferenceList_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleParent
entryRuleParent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParentRule()); }
	 iv_ruleParent=ruleParent 
	 { $current=$iv_ruleParent.current; } 
	 EOF 
;

// Rule Parent
ruleParent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':parent->' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParentAccess().getParentKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParentAccess().getTypeEntityCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParentAccess().getAnnotationsAnnotationGroupParserRuleCall_2_0()); 
	    }
		lv_annotations_2_0=ruleAnnotationGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParentRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_2_0, 
        		"AnnotationGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleChild
entryRuleChild returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChildRule()); }
	 iv_ruleChild=ruleChild 
	 { $current=$iv_ruleChild.current; } 
	 EOF 
;

// Rule Child
ruleChild returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':childs-<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChildAccess().getChildsKeyword_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChildRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getChildAccess().getTypeEntityCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getChildAccess().getAnnotationsAnnotationGroupParserRuleCall_2_0()); 
	    }
		lv_annotations_2_0=ruleAnnotationGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChildRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_2_0, 
        		"AnnotationGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		lv_optional_1_0=	'?' 
    {
        newLeafNode(lv_optional_1_0, grammarAccess.getPropertyAccess().getOptionalQuestionMarkKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "optional", true, "?");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPropertyAccess().getColonKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getTypeTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getAnnotationsAnnotationGroupParserRuleCall_4_0()); 
	    }
		lv_annotations_4_0=ruleAnnotationGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_4_0, 
        		"AnnotationGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	 iv_ruleReference=ruleReference 
	 { $current=$iv_ruleReference.current; } 
	 EOF 
;

// Rule Reference
ruleReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getReferenceAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		lv_optional_1_0=	'?' 
    {
        newLeafNode(lv_optional_1_0, grammarAccess.getReferenceAccess().getOptionalQuestionMarkKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
       		setWithLastConsumed($current, "optional", true, "?");
	    }

)
)?	otherlv_2='-->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getReferenceAccess().getEntityEntityCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceAccess().getAnnotationsAnnotationGroupParserRuleCall_4_0()); 
	    }
		lv_annotations_4_0=ruleAnnotationGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_4_0, 
        		"AnnotationGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleReferenceList
entryRuleReferenceList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceListRule()); }
	 iv_ruleReferenceList=ruleReferenceList 
	 { $current=$iv_ruleReferenceList.current; } 
	 EOF 
;

// Rule ReferenceList
ruleReferenceList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getReferenceListAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)((	otherlv_1='-' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReferenceListAccess().getHyphenMinusKeyword_1_0_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceListRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getReferenceListAccess().getReferenceReferenceCrossReference_1_0_1_0()); 
	}

)
)	otherlv_3='-<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReferenceListAccess().getHyphenMinusLessThanSignKeyword_1_0_2());
    }
)
    |	otherlv_4='--<' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getReferenceListAccess().getHyphenMinusHyphenMinusLessThanSignKeyword_1_1());
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceListRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getReferenceListAccess().getEntityEntityCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceListAccess().getAnnotationsAnnotationGroupParserRuleCall_3_0()); 
	    }
		lv_annotations_6_0=ruleAnnotationGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceListRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_6_0, 
        		"AnnotationGroup");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getTypesAnnoTypesParserRuleCall_1_0()); 
	    }
		lv_types_1_0=ruleAnnoTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_1_0, 
        		"AnnoTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getInstancesAnnotationInstanceParserRuleCall_2_0()); 
	    }
		lv_instances_2_0=ruleAnnotationInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"instances",
        		lv_instances_2_0, 
        		"AnnotationInstance");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightSquareBracketKeyword_3());
    }
	otherlv_4='annotation' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationAccess().getAnnotationKeyword_4());
    }
(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getAnnotationAccess().getNameIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
)	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAnnotationAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getMandatoriesAnnotationMandatoryPropertyParserRuleCall_7_0()); 
	    }
		lv_mandatories_7_0=ruleAnnotationMandatoryProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"mandatories",
        		lv_mandatories_7_0, 
        		"AnnotationMandatoryProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getOptionalsAnnotationOptionalPropertyParserRuleCall_8_0()); 
	    }
		lv_optionals_8_0=ruleAnnotationOptionalProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"optionals",
        		lv_optionals_8_0, 
        		"AnnotationOptionalProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAnnotationAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleAnnotationMandatoryProperty
entryRuleAnnotationMandatoryProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationMandatoryPropertyRule()); }
	 iv_ruleAnnotationMandatoryProperty=ruleAnnotationMandatoryProperty 
	 { $current=$iv_ruleAnnotationMandatoryProperty.current; } 
	 EOF 
;

// Rule AnnotationMandatoryProperty
ruleAnnotationMandatoryProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAnnotationMandatoryPropertyAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationMandatoryPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnnotationMandatoryPropertyAccess().getColonKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationMandatoryPropertyAccess().getGroupGroupTypeParserRuleCall_2_0_0()); 
	    }
		lv_group_2_0=ruleGroupType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationMandatoryPropertyRule());
	        }
       		set(
       			$current, 
       			"group",
        		lv_group_2_0, 
        		"GroupType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationMandatoryPropertyAccess().getTypeValueTypeEnumRuleCall_2_1_0_0()); 
	    }
		lv_type_3_0=ruleValueType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationMandatoryPropertyRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"ValueType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_multi_4_0=	'*' 
    {
        newLeafNode(lv_multi_4_0, grammarAccess.getAnnotationMandatoryPropertyAccess().getMultiAsteriskKeyword_2_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationMandatoryPropertyRule());
	        }
       		setWithLastConsumed($current, "multi", true, "*");
	    }

)
)?)))
;





// Entry rule entryRuleAnnotationOptionalProperty
entryRuleAnnotationOptionalProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationOptionalPropertyRule()); }
	 iv_ruleAnnotationOptionalProperty=ruleAnnotationOptionalProperty 
	 { $current=$iv_ruleAnnotationOptionalProperty.current; } 
	 EOF 
;

// Rule AnnotationOptionalProperty
ruleAnnotationOptionalProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAnnotationOptionalPropertyAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationOptionalPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnnotationOptionalPropertyAccess().getQuestionMarkKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnnotationOptionalPropertyAccess().getColonKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationOptionalPropertyAccess().getGroupGroupTypeParserRuleCall_3_0_0()); 
	    }
		lv_group_3_0=ruleGroupType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationOptionalPropertyRule());
	        }
       		set(
       			$current, 
       			"group",
        		lv_group_3_0, 
        		"GroupType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationOptionalPropertyAccess().getTypeValueTypeEnumRuleCall_3_1_0_0()); 
	    }
		lv_type_4_0=ruleValueType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationOptionalPropertyRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"ValueType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_multi_5_0=	'*' 
    {
        newLeafNode(lv_multi_5_0, grammarAccess.getAnnotationOptionalPropertyAccess().getMultiAsteriskKeyword_3_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationOptionalPropertyRule());
	        }
       		setWithLastConsumed($current, "multi", true, "*");
	    }

)
)?)))
;





// Entry rule entryRuleAnnotationGroup
entryRuleAnnotationGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationGroupRule()); }
	 iv_ruleAnnotationGroup=ruleAnnotationGroup 
	 { $current=$iv_ruleAnnotationGroup.current; } 
	 EOF 
;

// Rule AnnotationGroup
ruleAnnotationGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnnotationGroupAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationGroupAccess().getInstancesAnnotationInstanceParserRuleCall_1_0()); 
	    }
		lv_instances_1_0=ruleAnnotationInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationGroupRule());
	        }
       		add(
       			$current, 
       			"instances",
        		lv_instances_1_0, 
        		"AnnotationInstance");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnnotationGroupAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleAnnotationInstance
entryRuleAnnotationInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationInstanceRule()); }
	 iv_ruleAnnotationInstance=ruleAnnotationInstance 
	 { $current=$iv_ruleAnnotationInstance.current; } 
	 EOF 
;

// Rule AnnotationInstance
ruleAnnotationInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationInstanceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAnnotationInstanceAccess().getAnnotationAnnotationCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationInstanceAccess().getValuesAnnotationValueParserRuleCall_1_0()); 
	    }
		lv_values_1_0=ruleAnnotationValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationInstanceRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_1_0, 
        		"AnnotationValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_2='-HIDDEN-' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnnotationInstanceAccess().getHIDDENKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationInstanceAccess().getPropertiesAnnotationHiddenPropertyParserRuleCall_2_1_0()); 
	    }
		lv_properties_3_0=ruleAnnotationHiddenProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationInstanceRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_3_0, 
        		"AnnotationHiddenProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='-HIDDEN-' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationInstanceAccess().getHIDDENKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleAnnotationHiddenProperty
entryRuleAnnotationHiddenProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationHiddenPropertyRule()); }
	 iv_ruleAnnotationHiddenProperty=ruleAnnotationHiddenProperty 
	 { $current=$iv_ruleAnnotationHiddenProperty.current; } 
	 EOF 
;

// Rule AnnotationHiddenProperty
ruleAnnotationHiddenProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationHiddenPropertyRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getAnnotationHiddenPropertyAccess().getPropertyAnnotationPropertyCrossReference_0_0()); 
	}

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationHiddenPropertyRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getAnnotationHiddenPropertyAccess().getValuesAnnotationValueCrossReference_1_0()); 
	}

)
)*)
;





// Entry rule entryRuleAnnotationValue
entryRuleAnnotationValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationValueRule()); }
	 iv_ruleAnnotationValue=ruleAnnotationValue 
	 { $current=$iv_ruleAnnotationValue.current; } 
	 EOF 
;

// Rule AnnotationValue
ruleAnnotationValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnotationValueAccess().getValueParserRuleCall_0()); 
    }
    this_Value_0=ruleValue
    { 
        $current = $this_Value_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnotationValueAccess().getAnnotationGroupParserRuleCall_1()); 
    }
    this_AnnotationGroup_1=ruleAnnotationGroup
    { 
        $current = $this_AnnotationGroup_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleGroupType
entryRuleGroupType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupTypeRule()); }
	 iv_ruleGroupType=ruleGroupType 
	 { $current=$iv_ruleGroupType.current; } 
	 EOF 
;

// Rule GroupType
ruleGroupType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_type_0_0=	'#group' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getGroupTypeAccess().getTypeGroupKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "#group");
	    }

)
)(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGroupTypeAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePackageType
entryRulePackageType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageTypeRule()); }
	 iv_rulePackageType=rulePackageType 
	 { $current=$iv_rulePackageType.current; } 
	 EOF 
;

// Rule PackageType
rulePackageType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_type_0_0=	'#package' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getPackageTypeAccess().getTypePackageKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "#package");
	    }

)
)
;





// Entry rule entryRuleDataTypeType
entryRuleDataTypeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeTypeRule()); }
	 iv_ruleDataTypeType=ruleDataTypeType 
	 { $current=$iv_ruleDataTypeType.current; } 
	 EOF 
;

// Rule DataTypeType
ruleDataTypeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_type_0_0=	'#datatype' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getDataTypeTypeAccess().getTypeDatatypeKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "#datatype");
	    }

)
)
;





// Entry rule entryRuleAnnotationType
entryRuleAnnotationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationTypeRule()); }
	 iv_ruleAnnotationType=ruleAnnotationType 
	 { $current=$iv_ruleAnnotationType.current; } 
	 EOF 
;

// Rule AnnotationType
ruleAnnotationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_type_0_0=	'#annotation' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getAnnotationTypeAccess().getTypeAnnotationKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "#annotation");
	    }

)
)
;





// Entry rule entryRuleEntityType
entryRuleEntityType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityTypeRule()); }
	 iv_ruleEntityType=ruleEntityType 
	 { $current=$iv_ruleEntityType.current; } 
	 EOF 
;

// Rule EntityType
ruleEntityType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_type_0_0=	'#entity' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getEntityTypeAccess().getTypeEntityKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "#entity");
	    }

)
)
;





// Entry rule entryRulePropertyType
entryRulePropertyType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyTypeRule()); }
	 iv_rulePropertyType=rulePropertyType 
	 { $current=$iv_rulePropertyType.current; } 
	 EOF 
;

// Rule PropertyType
rulePropertyType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_type_0_0=	'#property' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getPropertyTypeAccess().getTypePropertyKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "#property");
	    }

)
)
;





// Entry rule entryRuleReferenceType
entryRuleReferenceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceTypeRule()); }
	 iv_ruleReferenceType=ruleReferenceType 
	 { $current=$iv_ruleReferenceType.current; } 
	 EOF 
;

// Rule ReferenceType
ruleReferenceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_type_0_0=	'#reference' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getReferenceTypeAccess().getTypeReferenceKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "#reference");
	    }

)
)
;





// Entry rule entryRuleReferenceListType
entryRuleReferenceListType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceListTypeRule()); }
	 iv_ruleReferenceListType=ruleReferenceListType 
	 { $current=$iv_ruleReferenceListType.current; } 
	 EOF 
;

// Rule ReferenceListType
ruleReferenceListType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_type_0_0=	'#reference-list' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getReferenceListTypeAccess().getTypeReferenceListKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceListTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "#reference-list");
	    }

)
)
;





// Entry rule entryRuleParentType
entryRuleParentType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParentTypeRule()); }
	 iv_ruleParentType=ruleParentType 
	 { $current=$iv_ruleParentType.current; } 
	 EOF 
;

// Rule ParentType
ruleParentType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_type_0_0=	'#parent' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getParentTypeAccess().getTypeParentKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParentTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "#parent");
	    }

)
)
;





// Entry rule entryRuleChildType
entryRuleChildType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChildTypeRule()); }
	 iv_ruleChildType=ruleChildType 
	 { $current=$iv_ruleChildType.current; } 
	 EOF 
;

// Rule ChildType
ruleChildType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_type_0_0=	'#child' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getChildTypeAccess().getTypeChildKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getChildTypeRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "#child");
	    }

)
)
;





// Entry rule entryRuleAnnoTypes
entryRuleAnnoTypes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnoTypesRule()); }
	 iv_ruleAnnoTypes=ruleAnnoTypes 
	 { $current=$iv_ruleAnnoTypes.current; } 
	 EOF 
;

// Rule AnnoTypes
ruleAnnoTypes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnoTypesAccess().getGroupTypeParserRuleCall_0()); 
    }
    this_GroupType_0=ruleGroupType
    { 
        $current = $this_GroupType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnoTypesAccess().getPackageTypeParserRuleCall_1()); 
    }
    this_PackageType_1=rulePackageType
    { 
        $current = $this_PackageType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnoTypesAccess().getDataTypeTypeParserRuleCall_2()); 
    }
    this_DataTypeType_2=ruleDataTypeType
    { 
        $current = $this_DataTypeType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnoTypesAccess().getAnnotationTypeParserRuleCall_3()); 
    }
    this_AnnotationType_3=ruleAnnotationType
    { 
        $current = $this_AnnotationType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnoTypesAccess().getEntityTypeParserRuleCall_4()); 
    }
    this_EntityType_4=ruleEntityType
    { 
        $current = $this_EntityType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnoTypesAccess().getPropertyTypeParserRuleCall_5()); 
    }
    this_PropertyType_5=rulePropertyType
    { 
        $current = $this_PropertyType_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnoTypesAccess().getReferenceTypeParserRuleCall_6()); 
    }
    this_ReferenceType_6=ruleReferenceType
    { 
        $current = $this_ReferenceType_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnoTypesAccess().getReferenceListTypeParserRuleCall_7()); 
    }
    this_ReferenceListType_7=ruleReferenceListType
    { 
        $current = $this_ReferenceListType_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnoTypesAccess().getParentTypeParserRuleCall_8()); 
    }
    this_ParentType_8=ruleParentType
    { 
        $current = $this_ParentType_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAnnoTypesAccess().getChildTypeParserRuleCall_9()); 
    }
    this_ChildType_9=ruleChildType
    { 
        $current = $this_ChildType_9.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	 iv_ruleStringValue=ruleStringValue 
	 { $current=$iv_ruleStringValue.current; } 
	 EOF 
;

// Rule StringValue
ruleStringValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleIntegerValue
entryRuleIntegerValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerValueRule()); }
	 iv_ruleIntegerValue=ruleIntegerValue 
	 { $current=$iv_ruleIntegerValue.current; } 
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerValueAccess().getValueIntegerParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleDoubleValue
entryRuleDoubleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleValueRule()); }
	 iv_ruleDoubleValue=ruleDoubleValue 
	 { $current=$iv_ruleDoubleValue.current; } 
	 EOF 
;

// Rule DoubleValue
ruleDoubleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleValueAccess().getValueDoubleParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"Double");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleRangeValue
entryRuleRangeValue returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getRangeValueRule()); }
	 iv_ruleRangeValue=ruleRangeValue 
	 { $current=$iv_ruleRangeValue.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule RangeValue
ruleRangeValue returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getRangeValueAccess().getFromIntegerParserRuleCall_0_0_0()); 
	    }
		lv_from_0_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeValueRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_0_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_fromInf_1_0=	'*' 
    {
        newLeafNode(lv_fromInf_1_0, grammarAccess.getRangeValueAccess().getFromInfAsteriskKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeValueRule());
	        }
       		setWithLastConsumed($current, "fromInf", true, "*");
	    }

)
))	otherlv_2='..' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRangeValueAccess().getFullStopFullStopKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRangeValueAccess().getToIntegerParserRuleCall_2_0_0()); 
	    }
		lv_to_3_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeValueRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_3_0, 
        		"Integer");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_toInf_4_0=	'*' 
    {
        newLeafNode(lv_toInf_4_0, grammarAccess.getRangeValueAccess().getToInfAsteriskKeyword_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeValueRule());
	        }
       		setWithLastConsumed($current, "toInf", true, "*");
	    }

)
)))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleFormatRangeValue
entryRuleFormatRangeValue returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getFormatRangeValueRule()); }
	 iv_ruleFormatRangeValue=ruleFormatRangeValue 
	 { $current=$iv_ruleFormatRangeValue.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FormatRangeValue
ruleFormatRangeValue returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
(
		lv_from_0_0=RULE_STRING
		{
			newLeafNode(lv_from_0_0, grammarAccess.getFormatRangeValueAccess().getFromSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormatRangeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"from",
        		lv_from_0_0, 
        		"STRING");
	    }

)
)	otherlv_1='..' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFormatRangeValueAccess().getFullStopFullStopKeyword_1());
    }
(
(
		lv_to_2_0=RULE_STRING
		{
			newLeafNode(lv_to_2_0, grammarAccess.getFormatRangeValueAccess().getToSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormatRangeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"to",
        		lv_to_2_0, 
        		"STRING");
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	ruleStringValue)=>
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); 
    }
    this_StringValue_0=ruleStringValue
    { 
        $current = $this_StringValue_0.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getValueAccess().getIntegerValueParserRuleCall_1()); 
    }
    this_IntegerValue_1=ruleIntegerValue
    { 
        $current = $this_IntegerValue_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getValueAccess().getDoubleValueParserRuleCall_2()); 
    }
    this_DoubleValue_2=ruleDoubleValue
    { 
        $current = $this_DoubleValue_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getValueAccess().getRangeValueParserRuleCall_3()); 
    }
    this_RangeValue_3=ruleRangeValue
    { 
        $current = $this_RangeValue_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getValueAccess().getFormatRangeValueParserRuleCall_4()); 
    }
    this_FormatRangeValue_4=ruleFormatRangeValue
    { 
        $current = $this_FormatRangeValue_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInteger
entryRuleInteger returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerRule()); } 
	 iv_ruleInteger=ruleInteger 
	 { $current=$iv_ruleInteger.current.getText(); }  
	 EOF 
;

// Rule Integer
ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleDouble
entryRuleDouble returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleRule()); } 
	 iv_ruleDouble=ruleDouble 
	 { $current=$iv_ruleDouble.current.getText(); }  
	 EOF 
;

// Rule Double
ruleDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDoubleAccess().getIntegerParserRuleCall_0()); 
    }
    this_Integer_0=ruleInteger    {
		$current.merge(this_Integer_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDoubleAccess().getFullStopKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule ValueType
ruleValueType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='#string' 
	{
        $current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='#integer' 
	{
        $current = grammarAccess.getValueTypeAccess().getINTEGEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getINTEGEREnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='#double' 
	{
        $current = grammarAccess.getValueTypeAccess().getDOUBLEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getDOUBLEEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='#int-range' 
	{
        $current = grammarAccess.getValueTypeAccess().getINT_RANGEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getINT_RANGEEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='#format-range' 
	{
        $current = grammarAccess.getValueTypeAccess().getFORMAT_RANGEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getFORMAT_RANGEEnumLiteralDeclaration_4()); 
    }
));



RULE_ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t')+;

RULE_END_LINE : '\r'? '\n';

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_PATTERN_STRING : '\'' ('\\' .|~(('\\'|'\'')))* '\'';

RULE_ANY_OTHER : .;


